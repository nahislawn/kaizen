// Generated by Dagger (https://dagger.dev).
package com.kaizenvpn.vpn.presentation.auth;

import com.kaizenvpn.vpn.data.repository.UserRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AuthViewModel_Factory implements Factory<AuthViewModel> {
  private final Provider<UserRepository> userReposProvider;

  public AuthViewModel_Factory(Provider<UserRepository> userReposProvider) {
    this.userReposProvider = userReposProvider;
  }

  @Override
  public AuthViewModel get() {
    return newInstance(userReposProvider.get());
  }

  public static AuthViewModel_Factory create(Provider<UserRepository> userReposProvider) {
    return new AuthViewModel_Factory(userReposProvider);
  }

  public static AuthViewModel newInstance(UserRepository userRepos) {
    return new AuthViewModel(userRepos);
  }
}
