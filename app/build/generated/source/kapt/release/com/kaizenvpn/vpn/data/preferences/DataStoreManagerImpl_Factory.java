// Generated by Dagger (https://dagger.dev).
package com.kaizenvpn.vpn.data.preferences;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DataStoreManagerImpl_Factory implements Factory<DataStoreManagerImpl> {
  private final Provider<Context> appContextProvider;

  public DataStoreManagerImpl_Factory(Provider<Context> appContextProvider) {
    this.appContextProvider = appContextProvider;
  }

  @Override
  public DataStoreManagerImpl get() {
    return newInstance(appContextProvider.get());
  }

  public static DataStoreManagerImpl_Factory create(Provider<Context> appContextProvider) {
    return new DataStoreManagerImpl_Factory(appContextProvider);
  }

  public static DataStoreManagerImpl newInstance(Context appContext) {
    return new DataStoreManagerImpl(appContext);
  }
}
